// Test for Retransmission Timeout with 5 packets outstanding.
// Receiver in this case supports sack.

// Create a listening TCP socket
0.000 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
0.000 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
0.000 bind(3, ..., ...) = 0
0.000 listen(3, 1) = 0

// Establish a connection
0.100 < S 0:0(0) win 65535 <mss 1000,sackOK,nop,nop,nop,wscale 7>
0.100 > S. 0:0(0) ack 1 <...>
0.100 < . 1:1(0) ack 1 win 65535
0.100 accept(3, ..., ...) = 4

0.110 %{
assert tcpi_rto == 3000000
}%

// We write 5 data segments
0.110 write(4, ..., 5000) = 5000
0.110 > .     1:1001(1000) ack 1
0.110 > .  1001:2001(1000) ack 1
0.110 > .  2001:3001(1000) ack 1
0.110 > .  3001:4001(1000) ack 1
0.110 > P. 4001:5001(1000) ack 1

// Receiver acknowledges only 1 segment
// 0.110 < . 1:1(0) ack 2001 win 65535

// Retransmission timeout occurs
// We start sending missing segments after 3 seconds
+3.0 > . 1:1001(1000) ack 1

// 0.350 < . 1:1(0) ack 1001 win 65535 <sack 2001:3001, nop, nop>

// Retransmission timeout occurs
// We send the missing segment taking the last
// acknowledged segment number as reference
// 0.650 > . 1001:2001(1000) ack 1

/** Observed behavior ~>
  * However at this point, we send the previous data
  * segment again (2001:3001), which was already
  * acknowledged as a sack by the client.
  */
